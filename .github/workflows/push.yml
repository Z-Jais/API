name: Push

on:
  push:
    branches:
      - master
      - stable

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Tests
        run: mvn test

  build:
    runs-on: ubuntu-latest

    needs:
      - test

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Build
        run: mvn -B package -DskipTests

  sonar:
    if: github.ref == 'refs/heads/master'
    name: Sonarqube
    runs-on: ubuntu-latest

    needs:
      - test

    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=jais-api -Dsonar.projectName='jais-api'

  docker:
    runs-on: ubuntu-latest

    needs:
      - build
      - sonar

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.ziedelth.fr:5000
          username: ziedelth
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push snapshot
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/master'
        with:
          context: .
          push: true
          tags: registry.ziedelth.fr:5000/jais-api:snapshot

      - name: Build and push production
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/stable'
        with:
          context: .
          push: true
          tags: registry.ziedelth.fr:5000/jais-api:latest

  release:
    if: github.ref == 'refs/heads/stable'
    name: Release
    runs-on: ubuntu-latest

    needs:
      - docker

    steps:
      - name: Install SSH KEY
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Adding Known Hosts
        run: ssh-keyscan -p 2222 -H ${{ secrets.SSH_HOST_IP }} >> ~/.ssh/known_hosts

      - name: SSH Commands
        run: |
          ssh -C -p 2222 ${{ secrets.SSH_DESTINATION }} "docker pull localhost:5000/jais-api:latest && cd ${{ secrets.SSH_FOLDER }} && docker compose down jais-api && docker compose up -d"
